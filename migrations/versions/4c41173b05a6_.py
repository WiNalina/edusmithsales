"""empty message

Revision ID: 4c41173b05a6
Revises: 921286c34f90
Create Date: 2021-03-15 21:18:45.103801

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4c41173b05a6'
down_revision = '921286c34f90'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_public_temptable_index', table_name='temptable')
    op.drop_table('temptable')
    op.drop_index('ix_apscheduler_jobs_next_run_time', table_name='apscheduler_jobs')
    op.drop_table('apscheduler_jobs')
    op.add_column('QIR_numbers', sa.Column('pdf_binary', sa.LargeBinary(), nullable=True))
    op.add_column('QIR_numbers', sa.Column('pickle_binary', sa.LargeBinary(), nullable=True))
    op.drop_column('QIR_numbers', 'doc_directory')
    op.drop_column('QIR_numbers', 'pickle_directory')
    op.add_column('QIR_numbers_preview', sa.Column('pdf_binary', sa.LargeBinary(), nullable=True))
    op.add_column('QIR_numbers_preview', sa.Column('pickle_binary', sa.LargeBinary(), nullable=True))
    op.drop_column('QIR_numbers_preview', 'doc_directory')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('QIR_numbers_preview', sa.Column('doc_directory', sa.VARCHAR(length=300), autoincrement=False, nullable=True))
    op.drop_column('QIR_numbers_preview', 'pickle_binary')
    op.drop_column('QIR_numbers_preview', 'pdf_binary')
    op.add_column('QIR_numbers', sa.Column('pickle_directory', sa.VARCHAR(length=300), autoincrement=False, nullable=True))
    op.add_column('QIR_numbers', sa.Column('doc_directory', sa.VARCHAR(length=300), autoincrement=False, nullable=True))
    op.drop_column('QIR_numbers', 'pickle_binary')
    op.drop_column('QIR_numbers', 'pdf_binary')
    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apscheduler_jobs_pkey')
    )
    op.create_index('ix_apscheduler_jobs_next_run_time', 'apscheduler_jobs', ['next_run_time'], unique=False)
    op.create_table('temptable',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dad_line', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dad_mobile_num', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mom_line', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('school', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dad_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('know_us_from', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('universal_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('previous_scores', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name_th', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('streak_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mom_email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('line', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('graduate_year', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('tax_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dad_email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mobile_num', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mom_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mom_mobile_num', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('student_country', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_index('ix_public_temptable_index', 'temptable', ['index'], unique=False)
    # ### end Alembic commands ###
