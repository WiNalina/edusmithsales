"""empty message

Revision ID: fd3504ba74e1
Revises: 2a6b167afdc0
Create Date: 2021-08-14 20:01:19.933268

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fd3504ba74e1'
down_revision = '2a6b167afdc0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('refund',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_refund', sa.DateTime(), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('office', sa.String(length=50), nullable=True),
    sa.Column('student_name', sa.String(length=100), nullable=True),
    sa.Column('graduate_year', sa.Integer(), nullable=True),
    sa.Column('credit_note_number', sa.String(length=50), nullable=True),
    sa.Column('type_of_refund', sa.String(length=50), nullable=True),
    sa.Column('refund_amount', sa.Float(), nullable=True),
    sa.Column('service_name', sa.String(length=200), nullable=True),
    sa.Column('service_category', sa.String(length=50), nullable=True),
    sa.Column('service_subcategory', sa.String(length=50), nullable=True),
    sa.Column('receipt_number', sa.String(length=10), nullable=True),
    sa.Column('receipt_value', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('credit_note')
    op.drop_index('ix_public_temptable_index', table_name='temptable')
    op.drop_table('temptable')
    op.add_column('accounting_record', sa.Column('refund_amount', sa.Float(), nullable=True))
    op.add_column('accounting_record', sa.Column('refund_date', sa.Date(), nullable=True))
    op.add_column('accounting_record', sa.Column('refund_status', sa.String(length=20), nullable=True))
    op.add_column('sale_record', sa.Column('refund_amount', sa.Float(), nullable=True))
    op.add_column('sale_record', sa.Column('refund_date', sa.Date(), nullable=True))
    op.add_column('sale_record', sa.Column('refund_status', sa.String(length=20), nullable=True))
    op.add_column('student', sa.Column('credit_value', sa.Float(), nullable=True))
    op.add_column('transaction', sa.Column('service_1_credit_note_number', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_1_refund_amount', sa.Float(), server_default='0.0', nullable=True))
    op.add_column('transaction', sa.Column('service_1_refund_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('transaction', sa.Column('service_1_refund_flag', sa.Boolean(), nullable=True))
    op.add_column('transaction', sa.Column('service_1_refund_status', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_2_credit_note_number', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_2_refund_amount', sa.Float(), server_default='0.0', nullable=True))
    op.add_column('transaction', sa.Column('service_2_refund_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('transaction', sa.Column('service_2_refund_flag', sa.Boolean(), nullable=True))
    op.add_column('transaction', sa.Column('service_2_refund_status', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_3_credit_note_number', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_3_refund_amount', sa.Float(), server_default='0.0', nullable=True))
    op.add_column('transaction', sa.Column('service_3_refund_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('transaction', sa.Column('service_3_refund_flag', sa.Boolean(), nullable=True))
    op.add_column('transaction', sa.Column('service_3_refund_status', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_4_credit_note_number', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_4_refund_amount', sa.Float(), server_default='0.0', nullable=True))
    op.add_column('transaction', sa.Column('service_4_refund_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('transaction', sa.Column('service_4_refund_flag', sa.Boolean(), nullable=True))
    op.add_column('transaction', sa.Column('service_4_refund_status', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_5_credit_note_number', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_5_refund_amount', sa.Float(), server_default='0.0', nullable=True))
    op.add_column('transaction', sa.Column('service_5_refund_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('transaction', sa.Column('service_5_refund_flag', sa.Boolean(), nullable=True))
    op.add_column('transaction', sa.Column('service_5_refund_status', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_6_credit_note_number', sa.String(length=50), nullable=True))
    op.add_column('transaction', sa.Column('service_6_refund_amount', sa.Float(), server_default='0.0', nullable=True))
    op.add_column('transaction', sa.Column('service_6_refund_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('transaction', sa.Column('service_6_refund_flag', sa.Boolean(), nullable=True))
    op.add_column('transaction', sa.Column('service_6_refund_status', sa.String(length=50), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('transaction', 'service_6_refund_status')
    op.drop_column('transaction', 'service_6_refund_flag')
    op.drop_column('transaction', 'service_6_refund_date')
    op.drop_column('transaction', 'service_6_refund_amount')
    op.drop_column('transaction', 'service_6_credit_note_number')
    op.drop_column('transaction', 'service_5_refund_status')
    op.drop_column('transaction', 'service_5_refund_flag')
    op.drop_column('transaction', 'service_5_refund_date')
    op.drop_column('transaction', 'service_5_refund_amount')
    op.drop_column('transaction', 'service_5_credit_note_number')
    op.drop_column('transaction', 'service_4_refund_status')
    op.drop_column('transaction', 'service_4_refund_flag')
    op.drop_column('transaction', 'service_4_refund_date')
    op.drop_column('transaction', 'service_4_refund_amount')
    op.drop_column('transaction', 'service_4_credit_note_number')
    op.drop_column('transaction', 'service_3_refund_status')
    op.drop_column('transaction', 'service_3_refund_flag')
    op.drop_column('transaction', 'service_3_refund_date')
    op.drop_column('transaction', 'service_3_refund_amount')
    op.drop_column('transaction', 'service_3_credit_note_number')
    op.drop_column('transaction', 'service_2_refund_status')
    op.drop_column('transaction', 'service_2_refund_flag')
    op.drop_column('transaction', 'service_2_refund_date')
    op.drop_column('transaction', 'service_2_refund_amount')
    op.drop_column('transaction', 'service_2_credit_note_number')
    op.drop_column('transaction', 'service_1_refund_status')
    op.drop_column('transaction', 'service_1_refund_flag')
    op.drop_column('transaction', 'service_1_refund_date')
    op.drop_column('transaction', 'service_1_refund_amount')
    op.drop_column('transaction', 'service_1_credit_note_number')
    op.drop_column('student', 'credit_value')
    op.drop_column('sale_record', 'refund_status')
    op.drop_column('sale_record', 'refund_date')
    op.drop_column('sale_record', 'refund_amount')
    op.drop_column('accounting_record', 'refund_status')
    op.drop_column('accounting_record', 'refund_date')
    op.drop_column('accounting_record', 'refund_amount')
    op.create_table('temptable',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dad_line', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dad_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('school', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mobile_num', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('know_us_from', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('graduate_year', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('previous_scores', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dad_mobile_num', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mom_mobile_num', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('universal_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('tax_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mom_line', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('line', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mom_email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name_th', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mom_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('streak_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dad_email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('student_country', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_index('ix_public_temptable_index', 'temptable', ['index'], unique=False)
    op.create_table('credit_note',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_change', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('difference', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('outstanding', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='credit_note_pkey')
    )
    op.drop_table('refund')
    # ### end Alembic commands ###
