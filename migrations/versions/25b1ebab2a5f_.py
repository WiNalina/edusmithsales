"""empty message

Revision ID: 25b1ebab2a5f
Revises: 
Create Date: 2021-02-28 11:26:48.275337

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '25b1ebab2a5f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('QIR_numbers_preview',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('code_type', sa.String(length=1), nullable=True),
    sa.Column('code_number', sa.String(length=10), nullable=True),
    sa.Column('doc_directory', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('office',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('info_for_vat', sa.Boolean(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('company_name', sa.String(length=200), nullable=True),
    sa.Column('address_1', sa.String(length=200), nullable=True),
    sa.Column('address_2', sa.String(length=200), nullable=True),
    sa.Column('vat_tax_id', sa.String(length=30), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('bank_name', sa.String(length=20), nullable=True),
    sa.Column('bank_account_name', sa.String(length=100), nullable=True),
    sa.Column('bank_account_number', sa.String(length=20), nullable=True),
    sa.Column('logo_directory', sa.String(length=250), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_role_default'), 'role', ['default'], unique=False)
    op.create_table('service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('display_name', sa.String(length=250), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('subcategory', sa.String(length=50), nullable=True),
    sa.Column('vat_proportion', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('vat_name', sa.String(length=200), nullable=True),
    sa.Column('non_vat_name', sa.String(length=200), nullable=True),
    sa.Column('note', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'country')
    )
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('streak_id', sa.String(length=100), nullable=True),
    sa.Column('universal_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('name_th', sa.String(length=100), nullable=True),
    sa.Column('student_country', sa.String(length=50), nullable=False),
    sa.Column('school', sa.String(length=100), nullable=True),
    sa.Column('graduate_year', sa.Integer(), nullable=True),
    sa.Column('mobile_num', sa.String(length=60), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=True),
    sa.Column('line', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('tax_id', sa.String(length=40), nullable=True),
    sa.Column('dad_name', sa.String(length=100), nullable=True),
    sa.Column('dad_mobile_num', sa.String(length=60), nullable=True),
    sa.Column('dad_email', sa.String(length=200), nullable=True),
    sa.Column('dad_line', sa.String(length=50), nullable=True),
    sa.Column('mom_name', sa.String(length=100), nullable=True),
    sa.Column('mom_mobile_num', sa.String(length=60), nullable=True),
    sa.Column('mom_email', sa.String(length=200), nullable=True),
    sa.Column('mom_line', sa.String(length=50), nullable=True),
    sa.Column('know_us_from', sa.String(length=200), nullable=True),
    sa.Column('total_value', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('universal_id')
    )
    op.create_table('user_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_country', sa.String(length=50), nullable=True),
    sa.Column('username', sa.String(length=25), nullable=True),
    sa.Column('activity_time', sa.DateTime(), nullable=True),
    sa.Column('activity_name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('universal_id', sa.Integer(), nullable=True),
    sa.Column('exam_compare_code', sa.String(length=200), nullable=True),
    sa.Column('exam_name', sa.String(length=50), nullable=False),
    sa.Column('exam_type', sa.String(length=50), nullable=True),
    sa.Column('exam_date', sa.DateTime(), nullable=True),
    sa.Column('mock_flag', sa.Boolean(), nullable=True),
    sa.Column('cat_1_name', sa.String(length=100), nullable=True),
    sa.Column('cat_1_score', sa.String(length=100), nullable=True),
    sa.Column('cat_2_name', sa.String(length=100), nullable=True),
    sa.Column('cat_2_score', sa.String(length=100), nullable=True),
    sa.Column('cat_3_name', sa.String(length=100), nullable=True),
    sa.Column('cat_3_score', sa.String(length=100), nullable=True),
    sa.Column('cat_4_name', sa.String(length=100), nullable=True),
    sa.Column('cat_4_score', sa.String(length=100), nullable=True),
    sa.Column('cat_5_name', sa.String(length=100), nullable=True),
    sa.Column('cat_5_score', sa.String(length=100), nullable=True),
    sa.Column('cat_6_name', sa.String(length=100), nullable=True),
    sa.Column('cat_6_score', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_score_exam_date'), 'test_score', ['exam_date'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=25), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=25), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('user_country', sa.String(length=50), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('about_me', sa.String(length=140), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('create_timestamp', sa.DateTime(), nullable=True),
    sa.Column('latest_timestamp', sa.DateTime(), nullable=True),
    sa.Column('create_user', sa.String(length=50), nullable=True),
    sa.Column('update_user', sa.String(length=50), nullable=True),
    sa.Column('student_full_name', sa.String(length=100), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('service_1_name', sa.String(length=100), nullable=False),
    sa.Column('service_1_price', sa.Float(), nullable=False),
    sa.Column('service_1_count', sa.Float(), nullable=True),
    sa.Column('service_1_unpaid_value', sa.Float(), nullable=False),
    sa.Column('service_1_discount_value', sa.Float(), nullable=True),
    sa.Column('service_1_final_price', sa.Float(), nullable=True),
    sa.Column('service_1_vat_value', sa.Float(), nullable=True),
    sa.Column('service_1_note', sa.String(length=200), nullable=True),
    sa.Column('service_2_name', sa.String(length=100), nullable=True),
    sa.Column('service_2_price', sa.Float(), nullable=True),
    sa.Column('service_2_count', sa.Float(), nullable=True),
    sa.Column('service_2_unpaid_value', sa.Float(), nullable=False),
    sa.Column('service_2_discount_value', sa.Float(), nullable=True),
    sa.Column('service_2_final_price', sa.Float(), nullable=True),
    sa.Column('service_2_vat_value', sa.Float(), nullable=True),
    sa.Column('service_2_note', sa.String(length=200), nullable=True),
    sa.Column('service_3_name', sa.String(length=100), nullable=True),
    sa.Column('service_3_price', sa.Float(), nullable=True),
    sa.Column('service_3_count', sa.Float(), nullable=True),
    sa.Column('service_3_unpaid_value', sa.Float(), nullable=False),
    sa.Column('service_3_discount_value', sa.Float(), nullable=True),
    sa.Column('service_3_final_price', sa.Float(), nullable=True),
    sa.Column('service_3_vat_value', sa.Float(), nullable=True),
    sa.Column('service_3_note', sa.String(length=200), nullable=True),
    sa.Column('service_4_name', sa.String(length=100), nullable=True),
    sa.Column('service_4_price', sa.Float(), nullable=True),
    sa.Column('service_4_count', sa.Float(), nullable=True),
    sa.Column('service_4_unpaid_value', sa.Float(), nullable=False),
    sa.Column('service_4_discount_value', sa.Float(), nullable=True),
    sa.Column('service_4_final_price', sa.Float(), nullable=True),
    sa.Column('service_4_vat_value', sa.Float(), nullable=True),
    sa.Column('service_4_note', sa.String(length=200), nullable=True),
    sa.Column('service_5_name', sa.String(length=100), nullable=True),
    sa.Column('service_5_price', sa.Float(), nullable=True),
    sa.Column('service_5_count', sa.Float(), nullable=True),
    sa.Column('service_5_unpaid_value', sa.Float(), nullable=False),
    sa.Column('service_5_discount_value', sa.Float(), nullable=True),
    sa.Column('service_5_final_price', sa.Float(), nullable=True),
    sa.Column('service_5_vat_value', sa.Float(), nullable=True),
    sa.Column('service_5_note', sa.String(length=200), nullable=True),
    sa.Column('service_6_name', sa.String(length=100), nullable=True),
    sa.Column('service_6_price', sa.Float(), nullable=True),
    sa.Column('service_6_count', sa.Float(), nullable=True),
    sa.Column('service_6_unpaid_value', sa.Float(), nullable=False),
    sa.Column('service_6_discount_value', sa.Float(), nullable=True),
    sa.Column('service_6_final_price', sa.Float(), nullable=True),
    sa.Column('service_6_vat_value', sa.Float(), nullable=True),
    sa.Column('service_6_note', sa.String(length=200), nullable=True),
    sa.Column('total_value', sa.Float(), nullable=True),
    sa.Column('remaining_outstanding', sa.Float(), nullable=True),
    sa.Column('overall_discount', sa.Float(), nullable=True),
    sa.Column('total_vat_value', sa.Float(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('refund_flag', sa.Boolean(), nullable=True),
    sa.Column('refund_amount', sa.Float(), nullable=True),
    sa.Column('cancel_flag', sa.Boolean(), nullable=True),
    sa.Column('complete_flag', sa.Boolean(), nullable=True),
    sa.Column('generate_invoice_flag', sa.Boolean(), nullable=True),
    sa.Column('generate_receipt_flag', sa.Boolean(), nullable=True),
    sa.Column('transaction_status', sa.String(length=20), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['create_user'], ['user.username'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_create_timestamp'), 'transaction', ['create_timestamp'], unique=False)
    op.create_index(op.f('ix_transaction_due_date'), 'transaction', ['due_date'], unique=False)
    op.create_index(op.f('ix_transaction_latest_timestamp'), 'transaction', ['latest_timestamp'], unique=False)
    op.create_table('QIR_numbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('creating_user', sa.String(length=25), nullable=True),
    sa.Column('code_type', sa.String(length=1), nullable=True),
    sa.Column('code_number', sa.String(length=10), nullable=True),
    sa.Column('doc_directory', sa.String(length=300), nullable=True),
    sa.Column('pickle_directory', sa.String(length=300), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code_number')
    )
    op.create_table('non_vat_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('code_number', sa.String(length=10), nullable=True),
    sa.Column('receipt_pm_code', sa.String(length=20), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('name_th', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('service', sa.String(length=200), nullable=True),
    sa.Column('service_count', sa.Float(), nullable=True),
    sa.Column('price_per_unit', sa.Float(), nullable=True),
    sa.Column('total_value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sale_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('code_number', sa.String(length=10), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('service_name', sa.String(length=200), nullable=True),
    sa.Column('service_category', sa.String(length=50), nullable=True),
    sa.Column('service_subcategory', sa.String(length=50), nullable=True),
    sa.Column('service_count', sa.Float(), nullable=True),
    sa.Column('price_per_unit', sa.Float(), nullable=True),
    sa.Column('total_value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sale_record')
    op.drop_table('non_vat_record')
    op.drop_table('QIR_numbers')
    op.drop_index(op.f('ix_transaction_latest_timestamp'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_due_date'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_create_timestamp'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_test_score_exam_date'), table_name='test_score')
    op.drop_table('test_score')
    op.drop_table('user_record')
    op.drop_table('student')
    op.drop_table('service')
    op.drop_index(op.f('ix_role_default'), table_name='role')
    op.drop_table('role')
    op.drop_table('office')
    op.drop_table('QIR_numbers_preview')
    # ### end Alembic commands ###
